Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416

Compiler options: -I. -O2 -qopt-report=3 -c -o pngio.o

    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: readImage(const char *, int *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (readImage(const char *, int *, int *)) [1] pngio.c(7,75)
  -> EXTERN: (12,13) fopen(const char *__restrict__, const char *__restrict__)
  -> EXTERN: (14,3) printf(const char *__restrict__, ...)
  -> EXTERN: (15,3) exit(int)
  -> EXTERN: (20,2) fread(void *__restrict__, size_t, size_t, FILE *__restrict__)
  -> EXTERN: (21,6) png_sig_cmp(png_const_bytep, png_size_t, png_size_t)
  -> EXTERN: (22,3) printf(const char *__restrict__, ...)
  -> EXTERN: (23,3) fclose(FILE *)
  -> EXTERN: (24,3) exit(int)
  -> EXTERN: (28,20) png_create_read_struct(png_const_charp, png_voidp, png_error_ptr, png_error_ptr)
  -> EXTERN: (29,19) png_create_info_struct(png_const_structrp)
  -> EXTERN: (30,2) _setjmp(struct __jmp_buf_tag *)
  -> EXTERN: (30,2) png_set_longjmp_fn(png_structrp, png_longjmp_ptr, size_t)
  -> EXTERN: (31,2) png_init_io(png_structrp, png_FILE_p)
  -> EXTERN: (32,2) png_set_sig_bytes(png_structrp, int)
  -> EXTERN: (33,2) png_read_info(png_structrp, png_inforp)
  -> EXTERN: (35,24) png_get_color_type(png_const_structrp, png_const_inforp)
  -> EXTERN: (36,23) png_get_bit_depth(png_const_structrp, png_const_inforp)
  -> EXTERN: (38,11) png_get_image_width(png_const_structrp, png_const_inforp)
  -> EXTERN: (40,12) png_get_image_height(png_const_structrp, png_const_inforp)
  -> EXTERN: (42,25) png_set_interlace_handling(png_structrp)
  -> EXTERN: (43,2) png_read_update_info(png_structrp, png_inforp)
  -> EXTERN: (46,2) _setjmp(struct __jmp_buf_tag *)
  -> EXTERN: (46,2) png_set_longjmp_fn(png_structrp, png_longjmp_ptr, size_t)
  -> EXTERN: (47,32) _mm_malloc(unsigned long long, unsigned long long)
  -> EXTERN: (49,24) _mm_malloc(unsigned long long, unsigned long long)
  -> EXTERN: (49,35) png_get_rowbytes(png_const_structrp, png_const_inforp)
  -> EXTERN: (50,2) png_read_image(png_structrp, png_bytepp)
  -> EXTERN: (52,5) png_get_rowbytes(png_const_structrp, png_const_inforp)
  -> EXTERN: (53,3) printf(const char *__restrict__, ...)
  -> EXTERN: (56,2) fclose(FILE *)
  -> EXTERN: (59,26) _mm_malloc(unsigned long long, unsigned long long)
  -> EXTERN: (66,3) _mm_free(void *)
  -> EXTERN: (67,2) _mm_free(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pngio.c(61,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pngio.c(62,3)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at pngio.c(62,3)
         remark #15300: LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 5 
         remark #15477: vector cost: 0.500 
         remark #15478: estimated potential speedup: 8.880 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=6
      LOOP END

      LOOP BEGIN at pngio.c(62,3)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=96
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at pngio.c(48,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at pngio.c(65,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

pngio.c(62,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
pngio.c(62,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
pngio.c(62,3):remark #34026: call to memcpy implemented as a call to optimized library version
pngio.c(7,75):remark #34051: REGISTER ALLOCATION : [readImage] pngio.c:7

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     180
            Global    :      45
            Local     :     135
        Regenerable   :      35
        Spilled       :       5
        
    Routine stack
        Variables     :      52 bytes*
            Reads     :      35 [2.33e+01 ~ 6.6%]
            Writes    :       6 [4.49e+00 ~ 1.3%]
        Spills        :      80 bytes*
            Reads     :      17 [2.37e+01 ~ 6.7%]
            Writes    :      10 [5.00e+00 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: writeImage(const char *, unsigned char *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (writeImage(const char *, unsigned char *, int, int)) [2] pngio.c(72,86)
  -> EXTERN: (74,13) fopen(const char *__restrict__, const char *__restrict__)
  -> EXTERN: (76,3) printf(const char *__restrict__, ...)
  -> EXTERN: (77,3) exit(int)
  -> EXTERN: (81,20) png_create_write_struct(png_const_charp, png_voidp, png_error_ptr, png_error_ptr)
  -> EXTERN: (82,19) png_create_info_struct(png_const_structrp)
  -> EXTERN: (83,2) _setjmp(struct __jmp_buf_tag *)
  -> EXTERN: (83,2) png_set_longjmp_fn(png_structrp, png_longjmp_ptr, size_t)
  -> EXTERN: (85,2) png_init_io(png_structrp, png_FILE_p)
  -> EXTERN: (88,2) png_set_IHDR(png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)
  -> EXTERN: (89,2) png_write_info(png_structrp, png_const_inforp)
  -> EXTERN: (92,30) _mm_malloc(unsigned long long, unsigned long long)
  -> EXTERN: (100,3) png_write_row(png_structrp, png_const_bytep)
  -> EXTERN: (104,2) png_write_end(png_structrp, png_inforp)
  -> EXTERN: (105,2) png_free_data(png_const_structrp, png_inforp, png_uint_32, int)
  -> EXTERN: (106,2) png_destroy_write_struct(png_structpp, png_infopp)
  -> EXTERN: (107,2) fclose(FILE *)
  -> EXTERN: (108,2) _mm_free(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at pngio.c(94,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 13 
   remark #15477: vector cost: 0.870 
   remark #15478: estimated potential speedup: 12.420 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #15500: saturating downconvert: 1 
LOOP END

LOOP BEGIN at pngio.c(94,3)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at pngio.c(93,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END

    Report from: Code generation optimizations [cg]

pngio.c(72,86):remark #34051: REGISTER ALLOCATION : [writeImage] pngio.c:72

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rax rdx rcx rbx rsi rdi r8-r9 r12 zmm0-zmm1]
        
    Routine temporaries
        Total         :     108
            Global    :      23
            Local     :      85
        Regenerable   :      27
        Spilled       :       0
        
    Routine stack
        Variables     :      40 bytes*
            Reads     :      19 [3.04e+01 ~ 5.9%]
            Writes    :       6 [5.76e+00 ~ 1.1%]
        Spills        :      40 bytes*
            Reads     :       5 [4.40e+00 ~ 0.9%]
            Writes    :       5 [5.00e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
