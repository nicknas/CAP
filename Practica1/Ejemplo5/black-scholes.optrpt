Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.4.243 Build 20190416

Compiler options: -I./ -O2 -g -qopt-report=3 -D__DO_FLOAT__ -xAVX -imf-precisionlow -imf-domain-exclusion31 -D_VML_ACCURACY_EP_ -mkl -o black-scholes

    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: BlackScholesFormula_Compiler(int, tfloat, tfloat, tfloat *, tfloat *, tfloat *, tfloat *, tfloat *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (BlackScholesFormula_Compiler(int, tfloat, tfloat, tfloat *, tfloat *, tfloat *, tfloat *, tfloat *)) [1] black-scholes.c(75,1)
  -> EXTERN: (86,13) logf(float)
  -> EXTERN: (91,13) expf(float)
  -> EXTERN: (96,14) erff(float)
  -> EXTERN: (97,14) erff(float)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at black-scholes.c(84,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 9 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 538 
   remark #15477: vector cost: 52.120 
   remark #15478: estimated potential speedup: 9.160 
   remark #15482: vectorized math library calls: 4 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at black-scholes.c(84,5)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

black-scholes.c(75,1):remark #34051: REGISTER ALLOCATION : [BlackScholesFormula_Compiler] black-scholes.c:75

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     160
            Global    :      51
            Local     :     109
        Regenerable   :       4
        Spilled       :      10
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      88 bytes*
            Reads     :       7 [2.27e+01 ~ 3.5%]
            Writes    :       7 [6.30e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
